---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Link from "../../components/Link.astro";
import FooterSignature from "../../components/FooterSignature.astro";
import RssIcon from "../../components/RssIcon.astro";
import "../../styles/global.css";

const posts = (await getCollection("blog"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const formatDate = (date: Date) => {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

// Add reading time to posts (fallback to estimated time if not provided)
const postsWithReadingTime = posts.map(post => {
  const readingTime = post.data.readingTime || 5; // Default to 5 min if not specified

  return {
    ...post,
    readingTime,
  };
});

// Generate structured data for the collection page
const structuredData = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  name: "Thoughts - Morris Liu",
  description:
    "Technical thoughts and insights from Morris Liu on software engineering, leadership, AI infrastructure, and open source development.",
  url: "https://realmorrisliu.com/thoughts",
  mainEntity: {
    "@type": "Blog",
    name: "Morris Liu's Technical Blog",
    description:
      "Deep dives into software engineering, open source projects, and technical leadership",
    blogPost: postsWithReadingTime.map(post => ({
      "@type": "BlogPosting",
      headline: post.data.title,
      description: post.data.description,
      datePublished: post.data.pubDate.toISOString(),
      dateModified: post.data.updatedDate?.toISOString() || post.data.pubDate.toISOString(),
      url: `https://realmorrisliu.com/thoughts/${post.id.replace(/\.md$/, "")}`,
      author: {
        "@type": "Person",
        name: post.data.author || "Morris Liu",
      },
      keywords: post.data.tags?.join(", "),
    })),
  },
};
---

<Layout
  title="Thoughts - Morris Liu"
  description="Technical thoughts and insights from Morris Liu on software engineering, leadership, AI infrastructure, and open source development. Stories behind building tools like Sealbox and Kira."
>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(structuredData)} />

  <div class="mx-auto max-w-2xl px-6 py-16">
    <header class="mb-16">
      <h1 class="mb-2 font-serif text-4xl leading-tight">Thoughts</h1>
    </header>

    <div class="space-y-16">
      {
        postsWithReadingTime.map(post => (
          <article class="border-b pb-12" style="border-color: var(--color-border);">
            <div class="mb-4">
              <h2 class="mb-2 font-serif text-2xl leading-tight">
                <Link
                  href={`/thoughts/${post.id.replace(/\.md$/, "")}`}
                  class="text-[color:var(--color-text-primary)]"
                >
                  {post.data.title}
                </Link>
              </h2>
              <div
                class="flex items-center gap-4 text-sm"
                style="color: var(--color-text-tertiary);"
              >
                <time>{formatDate(post.data.pubDate)}</time>
                <span>{post.readingTime} min read</span>
              </div>
            </div>
            <p class="text-base leading-relaxed" style="color: var(--color-text-secondary);">
              {post.data.description}
            </p>

            {post.data.tags && post.data.tags.length > 0 && (
              <div class="mt-4 flex flex-wrap gap-2">
                {post.data.tags.map(tag => (
                  <span
                    class="rounded-full border px-2 py-1 text-xs"
                    style="color: var(--color-text-tertiary); border-color: var(--color-border);"
                  >
                    {tag}
                  </span>
                ))}
              </div>
            )}
          </article>
        ))
      }
    </div>

    {
      posts.length === 0 && (
        <div class="py-16 text-center">
          <p class="text-lg" style="color: var(--color-text-secondary);">
            No thoughts yet. Create your first post in <code>src/content/blog/</code>
          </p>
        </div>
      )
    }

    <FooterSignature>
      <div class="mt-2 flex items-center justify-between">
        <nav>
          <Link href="/" class="text-sm">‚Üê Back to main page</Link>
        </nav>
        <RssIcon showText={true} />
      </div>
    </FooterSignature>
  </div>
</Layout>
