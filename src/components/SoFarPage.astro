---
import TimelineItem from "./TimelineItem.astro";
import ProjectItem from "./ProjectItem.astro";
import Link from "./Link.astro";
import FooterSignature from "./FooterSignature.astro";
import FormattedText from "./FormattedText.astro";
import { getTranslations, type Language } from "../i18n/utils";

interface Props {
  currentLang: Language;
}

const { currentLang } = Astro.props;
const t = getTranslations(currentLang);

// Generate language switch URLs
const enUrl = "/so-far";
const zhUrl = "/so-far/zh";
---

<div class="mx-auto max-w-2xl px-6 py-16">
  <header class="mb-16">
    <div class="mb-6 flex items-center justify-between">
      <h1 class="font-serif text-4xl leading-tight">
        {t.soFar.title}
      </h1>
      <div class="flex items-center gap-1 text-sm">
        <Link
          href={enUrl}
          class={`font-medium ${currentLang === "en" ? "text-[color:var(--color-text-primary)]" : "text-[color:var(--color-text-tertiary)]"}`}
        >
          EN
        </Link>
        <span class="text-[color:var(--color-border)]">|</span>
        <Link
          href={zhUrl}
          class={`font-medium ${currentLang === "zh" ? "text-[color:var(--color-text-primary)]" : "text-[color:var(--color-text-tertiary)]"}`}
        >
          中文
        </Link>
      </div>
    </div>

    <nav class="mb-8 flex flex-wrap gap-4">
      {
        t.soFar.nav.map(navItem => (
          <Link href={navItem.href} class="text-sm text-[color:var(--color-text-secondary)]">
            {navItem.label}
          </Link>
        ))
      }
    </nav>

    <!-- Summary description -->
    <div class="space-y-4">
      <p class="text-lg leading-relaxed text-[color:var(--color-text-secondary)]">
        {t.soFar.description}
      </p>
    </div>
  </header>

  <section id="work" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.work.title}
    </h2>

    <div class="mb-8">
      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        {t.soFar.work.description}
      </p>
    </div>

    <div class="relative">
      <!-- Continuous timeline line -->
      <div
        class="absolute top-0 bottom-0 left-0 w-px"
        style="background-color: var(--color-border);"
      >
      </div>

      <div class="space-y-8">
        {
          t.soFar.work.positions.map(position => (
            <TimelineItem
              year={position.year}
              title={position.title}
              company={position.company}
              period={position.period}
              description={position.description}
            />
          ))
        }
      </div>
    </div>
  </section>

  <section id="projects" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.projects.title}
    </h2>

    <p class="mb-8 text-base leading-relaxed text-[color:var(--color-text-secondary)]">
      {t.soFar.projects.description}
    </p>

    <!-- Work Projects -->
    <div class="mb-12">
      <h3 class="mb-8 font-serif text-xl text-[color:var(--color-text-primary)]">
        {t.soFar.projects.workProjects.title}
      </h3>
      <div class="space-y-8">
        {
          t.soFar.projects.workProjects.items.map(project => (
            <div class="border-l border-[color:var(--color-border)] pl-6">
              <div class="mb-4">
                <h4 class="mb-2 font-serif text-lg text-[color:var(--color-text-primary)]">
                  {project.title}
                </h4>
                <p class="text-sm font-medium text-[color:var(--color-text-tertiary)]">
                  {project.company}
                </p>
              </div>
              {project.details ? (
                <div class="space-y-3 text-base leading-relaxed text-[color:var(--color-text-secondary)]">
                  <p>{project.description}</p>
                  {project.details.map((detail: string) => {
                    const colonIndex = detail.indexOf(':');
                    const label = colonIndex > 0 ? detail.substring(0, colonIndex + 1) : '';
                    const text = colonIndex > 0 ? detail.substring(colonIndex + 1).trim() : detail;
                    
                    return (
                      <p>
                        <span class="font-medium text-[color:var(--color-text-primary)]">
                          {label}
                        </span>
                        {text}
                      </p>
                    );
                  })}
                </div>
              ) : (
                <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
                  {project.description}
                </p>
              )}
            </div>
          ))
        }
      </div>
    </div>

    <!-- Personal Projects -->
    <div>
      <h3 class="mb-6 font-serif text-lg text-[color:var(--color-text-primary)]">
        {t.soFar.projects.personalProjects.title}
      </h3>
      <div class="space-y-6">
        {
          t.soFar.projects.personalProjects.items.map(project => (
            <div>
              <ProjectItem
                title={project.title}
                description={project.description}
                githubUrl={project.githubUrl}
              />
              {project.readMore && (
                <p class="mt-2 ml-0 text-sm text-[color:var(--color-text-tertiary)]">
                  {project.title === "Sealbox" ? (
                    <>
                      {currentLang === "en" ? `${project.readMore} ` : "→ 在"}
                      <Link href="/thoughts/why-i-built-sealbox">
                        {currentLang === "en" ? "Why I Built Sealbox" : "《为什么我做Sealbox》"}
                      </Link>
                      {currentLang === "zh" && "中看这个项目背后的故事"}
                    </>
                  ) : project.title === "Kira" ? (
                    <>
                      {currentLang === "en" ? `${project.readMore} ` : "→ 在"}
                      <Link href="/thoughts/building-kira-an-ai-native-second-brain">
                        {currentLang === "en"
                          ? "Building Kira: An AI-Native Second Brain"
                          : "《构建 Kira：一个 AI 原生的第二大脑》"}
                      </Link>
                      {currentLang === "zh" && "中了解更多的愿景和设计理念"}
                    </>
                  ) : null}
                </p>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section id="skills" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.skills.title}
    </h2>
    <div class="space-y-4">
      {
        t.soFar.skills.categories.map(category => (
          <div>
            <h3 class="mb-2 font-serif text-base text-[color:var(--color-text-primary)]">
              {category.title}
            </h3>
            <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
              {category.description}
            </p>
          </div>
        ))
      }
    </div>
  </section>

  <section id="side" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.side.title}
    </h2>
    <div class="space-y-4">
      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        <FormattedText
          text={t.soFar.side.bass}
          replacements={[
            {
              placeholder: "{queen}",
              href: "https://en.wikipedia.org/wiki/Queen_(band)",
              label: "Queen",
            },
            {
              placeholder: "{chic}",
              href: "https://en.wikipedia.org/wiki/Chic_(band)",
              label: "Chic",
            },
            {
              placeholder: "{ewf}",
              href: "https://en.wikipedia.org/wiki/Earth,_Wind_%26_Fire",
              label: currentLang === "en" ? "EW&F" : "Earth, Wind & Fire",
            },
            {
              placeholder: "{acdc}",
              href: "https://en.wikipedia.org/wiki/AC/DC",
              label: "AC/DC",
            },
          ]}
        />
      </p>

      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        <FormattedText
          text={t.soFar.side.photography}
          replacements={[
            {
              placeholder: "{cartierBresson}",
              href: "https://en.wikipedia.org/wiki/Henri_Cartier-Bresson",
              label: currentLang === "en" ? "Henri Cartier-Bresson" : "卡蒂埃-布列松",
            },
            {
              placeholder: "{hideakiHamada}",
              href: "https://hideakihamada.com/about/",
              label: currentLang === "en" ? "Hideaki Hamada" : "滨田英明",
            },
          ]}
        />
      </p>

      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        {t.soFar.side.philosophy}
      </p>

      <div class="mt-6 border-t border-[color:var(--color-border)] pt-4">
        <p class="mb-2 font-serif text-sm text-[color:var(--color-text-tertiary)]">
          {t.soFar.side.gear.title}
        </p>
        <div class="space-y-1 text-sm text-[color:var(--color-text-tertiary)]">
          {t.soFar.side.gear.items.map(item => <p>{item}</p>)}
        </div>
      </div>
    </div>
  </section>

  <section id="contact" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.contact.title}
    </h2>
    <div class="space-y-4">
      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        <FormattedText
          text={t.soFar.contact.github}
          replacements={[
            {
              placeholder: "{github}",
              href: "https://github.com/realmorrisliu",
              label: "GitHub",
            },
          ]}
        />
      </p>

      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        <FormattedText
          text={t.soFar.contact.twitter}
          replacements={[
            {
              placeholder: "{twitter}",
              href: "https://twitter.com/realmorrisliu",
              label: "X (Twitter)",
            },
          ]}
        />
      </p>

      <p class="text-base leading-relaxed text-[color:var(--color-text-secondary)]">
        <FormattedText
          text={t.soFar.contact.email}
          replacements={[
            {
              placeholder: "{email}",
              href: "mailto:morrisliu1994@outlook.com",
              label: "morrisliu1994@outlook.com",
            },
          ]}
        />
      </p>
    </div>
  </section>

  <FooterSignature>
    <nav class="mt-2">
      <Link href="/" class="text-sm">
        {t.soFar.footer.backToMain}
      </Link>
    </nav>
  </FooterSignature>
</div>
