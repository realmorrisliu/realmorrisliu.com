---
import TimelineItem from "./TimelineItem.astro";
import ProjectItem from "./ProjectItem.astro";
import Link from "./Link.astro";
import FooterSignature from "./FooterSignature.astro";
import FormattedText from "./FormattedText.astro";
import { getTranslations, createLangSwitchUrl, type Language } from "../i18n/utils";

interface Props {
  currentLang: Language;
}

const { currentLang } = Astro.props;
const t = getTranslations(currentLang);

// Generate language switch URLs with current hash preserved
const currentHash = Astro.url.hash;
const enUrl = createLangSwitchUrl("en", currentHash);
const zhUrl = createLangSwitchUrl("zh", currentHash);
---

<div class="mx-auto max-w-2xl px-6 py-16">
  <header class="mb-16">
    <div class="mb-6 flex items-center justify-between">
      <h1 class="font-serif text-4xl leading-tight">
        {t.soFar.title}
      </h1>
      <div class="flex items-center gap-1 text-sm">
        <Link
          href={enUrl}
          class={`font-medium ${currentLang === "en" ? "text-text-primary" : "text-text-tertiary"}`}
        >
          {t.common.languages.en}
        </Link>
        <span class="text-[color:var(--color-border)]">|</span>
        <Link
          href={zhUrl}
          class={`font-medium ${currentLang === "zh" ? "text-text-primary" : "text-text-tertiary"}`}
        >
          {t.common.languages.zh}
        </Link>
      </div>
    </div>

    <nav class="mb-8 flex flex-wrap gap-4">
      {
        t.soFar.nav.map(navItem => (
          <Link href={navItem.href} class="text-text-secondary text-sm">
            {navItem.label}
          </Link>
        ))
      }
    </nav>

    <!-- Summary description -->
    <div class="space-y-4">
      <p class="text-text-secondary text-lg leading-relaxed">
        {t.soFar.description}
      </p>
      <p class="pdf-download-section text-text-secondary text-base leading-relaxed">
        {t.soFar.pdf.text}
        <Link href={currentLang === "zh" ? "/so-far/pdf/zh" : "/so-far/pdf"}>
          {t.soFar.pdf.linkText}
        </Link>
        {t.soFar.pdf.suffix}
      </p>
    </div>
  </header>

  <section id="work" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.work.title}
    </h2>

    <div class="mb-8">
      <p class="text-text-secondary text-base leading-relaxed">
        {t.soFar.work.description}
      </p>
    </div>

    <div class="relative">
      <!-- Continuous timeline line -->
      <div class="absolute top-0 bottom-0 left-0 w-px bg-gray-300"></div>

      <div class="space-y-12">
        {
          t.soFar.work.positions.map(position => (
            <TimelineItem
              year={position.year}
              title={position.title}
              company={position.company}
              period={position.period}
              description={position.description}
            />
          ))
        }
      </div>
    </div>
  </section>

  <section id="projects" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.projects.title}
    </h2>

    <p class="text-text-secondary mb-8 text-base leading-relaxed">
      {t.soFar.projects.description}
    </p>

    <!-- Work Projects -->
    <div class="mb-12">
      <h3 class="text-text-primary mb-8 font-serif text-xl">
        {t.soFar.projects.workProjects.title}
      </h3>
      <div class="space-y-8">
        {
          t.soFar.projects.workProjects.items.map(project => (
            <div class="border-l border-[color:var(--color-border)] pl-6">
              <div class="mb-4">
                <h4 class="text-text-primary mb-2 font-serif text-lg">{project.title}</h4>
                <div class="mb-1 flex items-center gap-2 text-sm">
                  <span class="text-text-primary font-medium">{project.company}</span>
                  <span class="text-[color:var(--color-border)]">|</span>
                  <span class="text-text-tertiary">{project.period}</span>
                </div>
              </div>
              {project.details ? (
                <div class="text-text-secondary space-y-3 text-sm leading-relaxed">
                  <p>{project.description}</p>
                  {project.details.map((detail: string) => {
                    const colonIndex = detail.indexOf(":");
                    const label = colonIndex > 0 ? detail.substring(0, colonIndex + 1) : "";
                    const text = colonIndex > 0 ? detail.substring(colonIndex + 1).trim() : detail;

                    return (
                      <p>
                        <span class="text-text-primary font-medium">{label}</span>
                        {text}
                      </p>
                    );
                  })}
                </div>
              ) : (
                <p class="text-text-secondary text-sm leading-relaxed">{project.description}</p>
              )}
            </div>
          ))
        }
      </div>
    </div>

    <!-- Personal Projects -->
    <div>
      <h3 class="text-text-primary mb-6 font-serif text-lg">
        {t.soFar.projects.personalProjects.title}
      </h3>
      <div class="space-y-6">
        {
          t.soFar.projects.personalProjects.items.map(project => (
            <div>
              <ProjectItem
                title={project.title}
                description={project.description}
                githubUrl={project.githubUrl}
              />
              {project.readMoreLink && (
                <p class="text-text-tertiary mt-2 ml-0 text-sm">
                  {project.readMoreLink.text}
                  <Link href={project.readMoreLink.href}>{project.readMoreLink.linkText}</Link>
                  {project.readMoreLink.suffix}
                </p>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section id="skills" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.skills.title}
    </h2>
    <div class="space-y-4">
      {
        t.soFar.skills.categories.map(category => (
          <div>
            <h3 class="text-text-primary mb-3 font-serif text-base">{category.title}</h3>
            <div class="space-y-2">
              <p class="text-text-secondary text-base leading-relaxed">{category.stack}</p>
              <p class="text-text-tertiary text-sm leading-relaxed italic">{category.philosophy}</p>
            </div>
          </div>
        ))
      }
    </div>
  </section>

  <section id="side" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.side.title}
    </h2>
    <div class="space-y-4">
      <p class="text-text-secondary text-base leading-relaxed">
        <FormattedText
          text={t.soFar.side.bass}
          replacements={[
            {
              placeholder: "{queen}",
              href: "https://en.wikipedia.org/wiki/Queen_(band)",
              label: "Queen",
            },
            {
              placeholder: "{chic}",
              href: "https://en.wikipedia.org/wiki/Chic_(band)",
              label: "Chic",
            },
            {
              placeholder: "{ewf}",
              href: "https://en.wikipedia.org/wiki/Earth,_Wind_%26_Fire",
              label: currentLang === "en" ? "EW&F" : "Earth, Wind & Fire",
            },
            {
              placeholder: "{acdc}",
              href: "https://en.wikipedia.org/wiki/AC/DC",
              label: "AC/DC",
            },
          ]}
        />
      </p>

      <p class="text-text-secondary text-base leading-relaxed">
        <FormattedText
          text={t.soFar.side.photography}
          replacements={[
            {
              placeholder: "{cartierBresson}",
              href: "https://en.wikipedia.org/wiki/Henri_Cartier-Bresson",
              label: t.soFar.side.photographers.cartierBresson,
            },
            {
              placeholder: "{hideakiHamada}",
              href: "https://hideakihamada.com/about/",
              label: t.soFar.side.photographers.hideakiHamada,
            },
          ]}
        />
      </p>

      <p class="text-text-secondary text-base leading-relaxed">
        {t.soFar.side.philosophy}
      </p>

      <div class="mt-6 border-t border-[color:var(--color-border)] pt-4">
        <p class="text-text-tertiary mb-2 font-serif text-sm">
          {t.soFar.side.gear.title}
        </p>
        <div class="text-text-tertiary space-y-1 text-sm">
          {t.soFar.side.gear.items.map(item => <p>{item}</p>)}
        </div>
      </div>
    </div>
  </section>

  <section id="contact" class="mb-16">
    <h2 class="mb-4 font-serif text-2xl leading-tight">
      {t.soFar.contact.title}
    </h2>
    <div class="space-y-4">
      <p class="text-text-secondary text-base leading-relaxed">
        {t.soFar.contact.github.text}
        <Link href={t.soFar.contact.github.link.href}>
          {t.soFar.contact.github.link.text}
        </Link>
        {t.soFar.contact.github.suffix}
      </p>

      <p class="text-text-secondary text-base leading-relaxed">
        {t.soFar.contact.twitter.text}
        <Link href={t.soFar.contact.twitter.link.href}>
          {t.soFar.contact.twitter.link.text}
        </Link>
        {t.soFar.contact.twitter.suffix}
      </p>

      <p class="text-text-secondary text-base leading-relaxed">
        {t.soFar.contact.email.text}
        <Link href={t.soFar.contact.email.link.href}>
          {t.soFar.contact.email.link.text}
        </Link>
        {t.soFar.contact.email.suffix}
      </p>
    </div>
  </section>

  <FooterSignature>
    <nav class="mt-2">
      <Link href="/" class="text-sm">
        {t.soFar.footer.backToMain}
      </Link>
    </nav>
  </FooterSignature>
</div>
