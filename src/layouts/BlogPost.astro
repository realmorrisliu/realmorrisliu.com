---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Link from "@components/Link.astro";
import FooterSignature from "@components/FooterSignature.astro";
import InlineNote from "@components/InlineNote.astro";
import SocialShare from "@components/SocialShare.astro";
import Tag from "@components/Tag.astro";
import { formatDate } from "@utils/dateUtils";
import "@styles/global.css";
import "@styles/prose.css";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  author: string;
  translator?: string;
  tags?: string[];
  readingTime?: number;
  draft?: boolean;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  author,
  translator,
  tags,
  readingTime: propReadingTime,
  draft = false,
} = Astro.props;

// Use reading time from frontmatter, or calculate as fallback
const readingTime =
  propReadingTime ||
  (() => {
    // Fallback calculation if not provided in frontmatter
    return 5; // Default estimate
  })();

// Detect if this is a Chinese article by checking URL path or title
const isChinese = Astro.url.pathname.includes("-zh") || /[\u4e00-\u9fff]/.test(title);

// Determine prose classes based on language
const proseClasses = isChinese
  ? "prose prose-lg prose-gray prose-chinese max-w-none"
  : "prose prose-lg prose-gray max-w-none";

// Enhanced keywords for SEO
const enhancedKeywords = [
  ...(tags || []),
  "Morris Liu",
  "Rust Programming Tutorial",
  "AI Infrastructure Guide",
  "Systems Programming",
  "Technical Leadership",
  "Startup CTO Experience",
  "Open Source Developer",
  "DevOps Security",
  "Software Architecture",
].filter(Boolean);

// Truncate title for breadcrumb display
const truncateTitle = (text: string, maxLength: number = 50) => {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength).replace(/\s+\S*$/, "") + "...";
};

// Get related posts based on shared tags
const allPosts = await getCollection("blog");
const relatedPosts = allPosts
  .filter(post => !post.data.draft && post.data.title !== title)
  .map(post => ({
    ...post,
    sharedTags: post.data.tags?.filter(tag => tags?.includes(tag))?.length || 0,
  }))
  .filter(post => post.sharedTags > 0)
  .sort(
    (a, b) => b.sharedTags - a.sharedTags || b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  )
  .slice(0, 3);
---

<Layout
  title={`${title} - Morris Liu`}
  description={description}
  type="article"
  publishedTime={pubDate.toISOString()}
  modifiedTime={updatedDate?.toISOString()}
  tags={enhancedKeywords}
  readingTime={readingTime}
>
  <article class="mx-auto max-w-2xl px-6 py-16">
    <!-- Breadcrumb Navigation for SEO -->
    <nav aria-label="Breadcrumb" class="mb-8">
      <ol class="text-text-tertiary flex items-center text-sm">
        <li class="shrink-0">
          <Link href="/" class="hover:text-text-secondary">Home</Link>
        </li>
        <li class="shrink-0 before:mx-2 before:content-['/']">
          <Link href="/thoughts" class="hover:text-text-secondary">Thoughts</Link>
        </li>
        <li class="min-w-0 truncate before:mx-2 before:content-['/']">
          <span class="truncate" title={title}>{truncateTitle(title, 35)}</span>
        </li>
      </ol>
      <script
        type="application/ld+json"
        is:inline
        set:html={JSON.stringify({
          "@context": "https://schema.org",
          "@type": "BreadcrumbList",
          itemListElement: [
            {
              "@type": "ListItem",
              position: 1,
              name: "Home",
              item: "https://realmorrisliu.com/",
            },
            {
              "@type": "ListItem",
              position: 2,
              name: "Thoughts",
              item: "https://realmorrisliu.com/thoughts",
            },
            {
              "@type": "ListItem",
              position: 3,
              name: title,
              item: `https://realmorrisliu.com${Astro.url.pathname}`,
            },
          ],
        })}
      />
    </nav>

    <header class="mb-16">
      <h1 class="mb-6 font-serif text-3xl leading-tight md:text-4xl">{title}</h1>

      <div class="flex items-center gap-4 text-sm text-gray-500">
        <time>{formatDate(pubDate)}</time>
        <span>{readingTime} min read</span>
      </div>
    </header>

    <div class={proseClasses}>
      <slot />
    </div>

    <!-- {!draft && <SocialShare title={title} url={`https://realmorrisliu.com${Astro.url.pathname}`} />} -->

    <!-- Related Articles -->
    <!-- {
      relatedPosts.length > 0 && (
        <section class="border-border mt-16 border-t pt-8" aria-label="Related articles">
          <h2 class="mb-6 font-serif text-xl">Related articles</h2>
          <div class="space-y-4">
            {relatedPosts.map(post => (
              <article class="border-l-2 border-gray-200 pl-4">
                <h3 class="mb-2 font-serif text-lg leading-tight">
                  <Link
                    href={`/thoughts/${post.id.replace(/\.(md|mdx)$/, "")}`}
                    class="hover:underline"
                  >
                    {post.data.title}
                  </Link>
                </h3>
                <p class="mb-2 text-sm text-gray-600">{post.data.description}</p>
                <div class="flex items-center gap-4 text-xs text-gray-500">
                  <time>{formatDate(post.data.pubDate)}</time>
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="flex gap-1">
                      {post.data.tags.slice(0, 2).map(tag => (
                        <Tag
                          tag={tag}
                          size="sm"
                          interactive={true}
                          href={`/thoughts/tags/${tag.toLowerCase()}`}
                        />
                      ))}
                    </div>
                  )}
                </div>
              </article>
            ))}
          </div>
        </section>
      )
    } -->

    <FooterSignature author={author} translator={translator}>
      <nav class="mt-2">
        <Link href="/thoughts" class="text-sm">← Back to thoughts</Link>
      </nav>
    </FooterSignature>
  </article>

  <!-- InlineNote 容器，为所有 InlineNoteRef 提供 tooltip 容器 -->
  <InlineNote />
</Layout>
