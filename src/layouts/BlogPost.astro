---
import Layout from "./Layout.astro";
import Link from "../components/Link.astro";
import FooterSignature from "../components/FooterSignature.astro";
import InlineNote from "../components/InlineNote.astro";
import { formatDate } from "../utils/dateUtils";
import "../styles/global.css";
import "../styles/prose.css";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  author: string;
  translator?: string;
  tags?: string[];
  readingTime?: number;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  author,
  translator,
  tags,
  readingTime: propReadingTime,
} = Astro.props;

// Use reading time from frontmatter, or calculate as fallback
const readingTime =
  propReadingTime ||
  (() => {
    // Fallback calculation if not provided in frontmatter
    return 5; // Default estimate
  })();

// Detect if this is a Chinese article by checking URL path or title
const isChinese = Astro.url.pathname.includes("-zh") || /[\u4e00-\u9fff]/.test(title);

// Determine prose classes based on language
const proseClasses = isChinese
  ? "prose prose-lg prose-gray prose-chinese max-w-none"
  : "prose prose-lg prose-gray max-w-none";

// Enhanced keywords for SEO
const enhancedKeywords = [
  ...(tags || []),
  "Morris Liu",
  "Software Engineer",
  "Tech Blog",
  "Programming",
].filter(Boolean);

// Truncate title for breadcrumb display
const truncateTitle = (text: string, maxLength: number = 50) => {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength).replace(/\s+\S*$/, "") + "...";
};
---

<Layout
  title={`${title} - Morris Liu`}
  description={description}
  type="article"
  publishedTime={pubDate.toISOString()}
  modifiedTime={updatedDate?.toISOString()}
  tags={enhancedKeywords}
  readingTime={readingTime}
>
  <article class="mx-auto max-w-2xl px-6 py-16">
    <!-- Breadcrumb Navigation for SEO -->
    <nav aria-label="Breadcrumb" class="mb-8">
      <ol class="text-text-tertiary flex items-center text-sm">
        <li class="shrink-0">
          <Link href="/" class="hover:text-text-secondary">Home</Link>
        </li>
        <li class="shrink-0 before:mx-2 before:content-['/']">
          <Link href="/thoughts" class="hover:text-text-secondary">Thoughts</Link>
        </li>
        <li class="min-w-0 truncate before:mx-2 before:content-['/']">
          <span class="truncate" title={title}>{truncateTitle(title, 35)}</span>
        </li>
      </ol>
      <script
        type="application/ld+json"
        is:inline
        set:html={JSON.stringify({
          "@context": "https://schema.org",
          "@type": "BreadcrumbList",
          itemListElement: [
            {
              "@type": "ListItem",
              position: 1,
              name: "Home",
              item: "https://realmorrisliu.com/",
            },
            {
              "@type": "ListItem",
              position: 2,
              name: "Thoughts",
              item: "https://realmorrisliu.com/thoughts",
            },
            {
              "@type": "ListItem",
              position: 3,
              name: title,
              item: `https://realmorrisliu.com${Astro.url.pathname}`,
            },
          ],
        })}
      />
    </nav>

    <header class="mb-16">
      <h1 class="mb-6 font-serif text-3xl leading-tight md:text-4xl">{title}</h1>

      <div class="flex items-center gap-4 text-sm text-gray-500">
        <time>{formatDate(pubDate)}</time>
        <span>{readingTime} min read</span>
      </div>
    </header>

    <div class={proseClasses}>
      <slot />
    </div>

    <FooterSignature author={author} translator={translator}>
      <nav class="mt-2">
        <Link href="/thoughts" class="text-sm">← Back to thoughts</Link>
      </nav>
    </FooterSignature>
  </article>

  <!-- InlineNote 容器，为所有 InlineNoteRef 提供 tooltip 容器 -->
  <InlineNote />
</Layout>
