---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: string;
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
  readingTime?: number;
}

const {
  title,
  description = "Morris Liu - Software Engineer & Team Lead building AI infrastructure and open source tools. Thoughts on technology, leadership, and design.",
  image = "/og-image.png",
  type = "website",
  publishedTime,
  modifiedTime,
  tags = [],
  readingTime,
} = Astro.props;

const pathname = Astro.url.pathname;
const canonicalURL = new URL(pathname, Astro.site || "https://realmorrisliu.com");
const imageURL = new URL(image, Astro.site || "https://realmorrisliu.com");

// Generate keywords
const keywords = [
  "Morris Liu",
  "Software Engineer",
  "Full Stack Developer",
  "CTO",
  "Team Lead",
  "Rust",
  "TypeScript",
  "AI Infrastructure",
  "Open Source",
  "Leadership",
  "EverXYZ",
  "UniXYZ",
  "Sealbox",
  "Kira",
  "CAD",
  "3D Visualization",
  ...tags,
].join(", ");
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="author" content="Morris Liu" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageURL} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Morris Liu" />
    <meta property="og:locale" content="en_US" />

    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {type === "article" && <meta property="article:author" content="Morris Liu" />}
    {tags.map(tag => <meta property="article:tag" content={tag} />)}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageURL} />
    <meta property="twitter:creator" content="@realmorrisliu" />

    <!-- Additional SEO -->
    <meta name="theme-color" content="#ffffff" />
    <meta name="msapplication-TileColor" content="#ffffff" />

    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Morris Liu's Blog" href="/rss.xml" />

    <!-- Sitemap -->
    <link rel="sitemap" type="application/xml" title="Sitemap" href="/sitemap-index.xml" />

    <!-- Critical CSS inline would go here for above-the-fold content -->
    <!-- Fonts are loaded via CSS imports in global.css for better caching -->

    <!-- JSON-LD Schema -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": type === "article" ? "BlogPosting" : "Person",
        ...(type === "article"
          ? {
              headline: title,
              description: description,
              image: imageURL.toString(),
              author: {
                "@type": "Person",
                name: "Morris Liu",
                url: "https://realmorrisliu.com",
                sameAs: ["https://github.com/realmorrisliu", "https://twitter.com/realmorrisliu"],
              },
              publisher: {
                "@type": "Person",
                name: "Morris Liu",
                url: "https://realmorrisliu.com",
                logo: {
                  "@type": "ImageObject",
                  url: "https://realmorrisliu.com/favicon.svg",
                },
              },
              datePublished: publishedTime,
              dateModified: modifiedTime || publishedTime,
              mainEntityOfPage: {
                "@type": "WebPage",
                "@id": canonicalURL.toString(),
              },
              articleSection: "Technology",
              inLanguage: "en-US",
              keywords: tags.join(", "),
              potentialAction: {
                "@type": "ReadAction",
                target: canonicalURL.toString(),
              },
              ...(readingTime && {
                timeRequired: `PT${readingTime}M`,
              }),
            }
          : {
              name: "Morris Liu",
              alternateName: ["Morris", "Liu Morris"],
              description:
                "Software Engineer & Team Lead building AI infrastructure and open source tools",
              url: "https://realmorrisliu.com",
              image: imageURL.toString(),
              sameAs: ["https://github.com/realmorrisliu", "https://twitter.com/realmorrisliu"],
              jobTitle: "Software Engineer & Team Lead",
              worksFor: {
                "@type": "Organization",
                name: "UniXYZ",
              },
              knowsAbout: [
                "Software Engineering",
                "Full Stack Development",
                "AI Infrastructure",
                "Team Leadership",
                "Rust Programming",
                "TypeScript",
                "Open Source Development",
              ],
            }),
      })}
    />
  </head>
  <body>
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    min-height: 100%;
  }
</style>
