---
import Button from "@components/Button.astro";
import Link from "@components/Link.astro";
import ResumeSection from "@components/Resume/ResumeSection.astro";
import SkillsGrid from "@components/Resume/SkillsGrid.astro";
import WorkExperienceList from "@components/Resume/WorkExperienceList.astro";
import ProjectsList from "@components/Resume/ProjectsList.astro";
import { getTranslations, getHtmlLangAttribute } from "@i18n/utils";
import "@styles/global.css";

export interface Props {
  currentLang: "en" | "zh";
}

const { currentLang } = Astro.props;
const t = getTranslations(currentLang);
const htmlLang = getHtmlLangAttribute(currentLang);

// Generate page title and description from translations
const pageTitle = t.soFar.pdf.pageTitle;
const pageDescription = t.soFar.pdf.pageDescription;

const backUrl = currentLang === "zh" ? "/so-far/zh" : "/so-far";

// Generate canonical URL
const pathname = Astro.url.pathname.replace(/\.html$/, "").replace(/\/$/, "");
const canonicalURL = new URL(pathname, Astro.site || "https://realmorrisliu.com");

// Set up alternate languages
const alternateLanguages =
  currentLang === "en"
    ? [{ lang: "zh", url: "https://realmorrisliu.com/so-far/pdf/zh" }]
    : [{ lang: "en", url: "https://realmorrisliu.com/so-far/pdf" }];
---

<!doctype html>
<html lang={htmlLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{pageTitle}</title>
    <meta name="title" content={pageTitle} />
    <meta name="description" content={pageDescription} />
    <meta
      name="keywords"
      content="Morris Liu, Resume, PDF, Full-Stack Engineer, Technical Leader"
    />
    <meta name="author" content="Morris Liu" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:image" content="https://realmorrisliu.com/og-image.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content="Morris Liu - Resume" />
    <meta property="og:site_name" content="Morris Liu" />
    <meta property="og:locale" content={currentLang === "zh" ? "zh_CN" : "en_US"} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:description" content={pageDescription} />
    <meta property="twitter:image" content="https://realmorrisliu.com/og-image.png" />
    <meta property="twitter:image:alt" content="Morris Liu - Resume" />
    <meta property="twitter:creator" content="@realmorrisliu" />

    <!-- Additional SEO -->
    <meta name="theme-color" content="#ffffff" />
    <meta name="msapplication-TileColor" content="#ffffff" />

    <!-- Hreflang for multilingual support -->
    {
      alternateLanguages.map(({ lang: hrefLang, url }) => (
        <link rel="alternate" hreflang={hrefLang} href={url} />
      ))
    }
    <link rel="alternate" hreflang={currentLang} href={canonicalURL.toString()} />

    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Morris Liu's Blog" href="/rss.xml" />

    <!-- Web App Manifest -->
    <link rel="manifest" href="/manifest.json" />

    <!-- Sitemap -->
    <link rel="sitemap" type="application/xml" title="Sitemap" href="/sitemap-index.xml" />
  </head>

  <body class="m-0 min-h-full w-full">
    <!-- PDF Indicator -->
    <div class="mb-4 bg-gray-100 px-4 py-3.5 font-sans sm:mb-5 sm:px-5 sm:py-4 print:hidden">
      <div
        class="mb-2.5 flex flex-col items-start gap-3 sm:mb-3 sm:flex-row sm:items-center sm:justify-between sm:gap-4"
      >
        <div class="flex flex-1 items-center gap-2.5 sm:gap-3">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="currentColor"
            class="text-text-tertiary flex-shrink-0"
          >
            <title>PDF</title>
            <path
              d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"
            ></path>
          </svg>
          <div class="flex-1">
            <span
              class="text-text-secondary m-0 text-[0.8125rem] leading-[var(--line-height-normal)] font-normal sm:text-sm"
            >
              {t.soFar.pdf.title}
            </span>
          </div>
        </div>

        <div class="flex flex-shrink-0 items-center gap-2">
          <!-- Language Toggle -->
          <Button
            href={currentLang === "en" ? "/so-far/pdf/zh" : "/so-far/pdf"}
            variant="secondary"
            size="sm"
          >
            {currentLang === "en" ? "中文" : "English"}
          </Button>

          <Button id="print-button" variant="primary" size="sm">
            {t.soFar.pdf.printButton}
          </Button>
        </div>
      </div>

      <div
        class="flex flex-col items-start gap-2 text-xs sm:flex-row sm:items-center sm:justify-between sm:gap-4"
      >
        <p class="text-text-tertiary m-0 flex-1 text-xs italic">
          {t.soFar.pdf.printButtonHint}
        </p>
        <Link href={backUrl} class="text-xs whitespace-nowrap">
          {t.soFar.pdf.backText}
        </Link>
      </div>
    </div>

    <!-- Resume Content -->
    <div
      class="text-resume-body mx-auto h-[297mm] w-[210mm] border border-black bg-white px-5 py-3 font-sans leading-tight text-black"
    >
      <!-- Header Section -->
      <header class="mb-1.5 border-b border-black pb-1.5 text-center">
        <h1 class="text-resume-name m-0 mb-0.5 font-serif font-semibold">Morris Liu</h1>
        <div class="text-resume-body mb-0.5 text-gray-700">
          <span class="mx-0.5">morrisliu1994@outlook.com</span>
          <span class="mx-0.5">•</span>
          <span class="mx-0.5">github.com/realmorrisliu</span>
          <span class="mx-0.5">•</span>
          <span class="mx-0.5">x.com/realmorrisliu</span>
        </div>
        <p class="text-resume-body leading-snug font-normal">
          {t.soFar.resumeSummary}
        </p>
      </header>

      <!-- Skills Section -->
      <ResumeSection title={t.soFar.skills.title}>
        <SkillsGrid categories={t.soFar.skills.categories} />
      </ResumeSection>

      <!-- Work Experience -->
      <ResumeSection title={t.soFar.work.title}>
        <WorkExperienceList positions={t.soFar.work.positions} />
      </ResumeSection>

      <!-- Work Projects -->
      <ResumeSection title={t.soFar.projects.workProjects.title}>
        <ProjectsList projects={t.soFar.projects.workProjects.items} />
      </ResumeSection>

      <!-- Personal Projects -->
      <ResumeSection title={t.soFar.projects.personalProjects.title}>
        <ProjectsList projects={t.soFar.projects.personalProjects.items} showGithubLinks={true} />
      </ResumeSection>
    </div>

    <div class="mt-4 print:hidden"></div>

    <!-- Scripts -->
    <script>
      // Auto-trigger print dialog after page loads
      window.addEventListener("load", () => {
        setTimeout(() => {
          window.print();
        }, 500);
      });

      // Manual print button handler
      document.addEventListener("DOMContentLoaded", () => {
        const printButton = document.getElementById("print-button");
        if (printButton) {
          printButton.addEventListener("click", () => {
            window.print();
          });
        }
      });
    </script>
  </body>
</html>

<style>
  /* Print styles */
  @media print {
    @page {
      margin: 0mm;
      size: A4;
    }
  }
</style>
